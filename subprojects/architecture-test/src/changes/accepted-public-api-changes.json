{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerScope",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerScope.invoke(org.gradle.api.artifacts.Configuration,org.gradle.api.provider.Provider,kotlin.jvm.functions.Function1)",
            "acceptation": "Bug in the binary compatiblity checker: https://github.com/gradle/gradle/issues/15448",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerScope",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerScope.invoke(org.gradle.api.artifacts.Configuration,org.gradle.api.provider.Provider)",
            "acceptation": "Bug in the binary compatiblity checker: https://github.com/gradle/gradle/issues/15448",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS"
            ]
        },{
            "type": "org.gradle.kotlin.dsl.DependencyHandlerScope",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerScope.invoke(java.lang.String,org.gradle.api.provider.Provider,kotlin.jvm.functions.Function1)",
            "acceptation": "Bug in the binary compatiblity checker: https://github.com/gradle/gradle/issues/15448",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerScope",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerScope.invoke(java.lang.String,org.gradle.api.provider.Provider)",
            "acceptation": "Bug in the binary compatiblity checker: https://github.com/gradle/gradle/issues/15448",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS"
            ]
        },


        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method org.gradle.api.tasks.SourceSet.getCompileConfigurationName()",
            "acceptation": "Configuration 'compile' was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSet",
            "member": "Method org.gradle.api.tasks.SourceSet.getRuntimeConfigurationName()",
            "acceptation": "Configuration 'runtime' was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPlugin",
            "member": "Field COMPILE_CONFIGURATION_NAME",
            "acceptation": "Configuration 'compile' was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPlugin",
            "member": "Field RUNTIME_CONFIGURATION_NAME",
            "acceptation": "Configuration 'runtime' was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPlugin",
            "member": "Field TEST_COMPILE_CONFIGURATION_NAME",
            "acceptation": "Configuration 'test compile' was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPlugin",
            "member": "Field TEST_RUNTIME_CONFIGURATION_NAME",
            "acceptation": "Configuration 'test runtime' was removed",
            "changes": [
                "Field has been removed"
            ]
        },

        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method org.gradle.api.artifacts.repositories.IvyArtifactRepository.layout(java.lang.String,org.gradle.api.Action)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Method org.gradle.api.artifacts.repositories.IvyArtifactRepository.layout(java.lang.String,groovy.lang.Closure)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.ProjectLayout",
            "member": "Method org.gradle.api.file.ProjectLayout.configurableFiles(java.lang.Object[])",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Class org.gradle.api.DefaultTask",
            "acceptation": "Removal of unused internal method",
            "changes": [
                "org.gradle.api.internal.AbstractTask.setLoggerMessageRewriter(org.gradle.internal.logging.slf4j.ContextAwareTaskLogger$MessageRewriter)"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.plugins.quality.Pmd.getRulePriority()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Pmd",
            "member": "Method org.gradle.api.plugins.quality.Pmd.setRulePriority(int)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method org.gradle.api.plugins.quality.PmdExtension.getRulePriority()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdExtension",
            "member": "Method org.gradle.api.plugins.quality.PmdExtension.setRulePriority(int)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.plugins.quality.Checkstyle.getConfigDir()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.plugins.quality.Checkstyle.setConfigDir(org.gradle.api.provider.Provider)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method org.gradle.api.plugins.quality.CheckstyleExtension.getConfigDir()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstyleExtension",
            "member": "Method org.gradle.api.plugins.quality.CheckstyleExtension.setConfigDir(java.io.File)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },


        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Class org.gradle.api.plugins.MavenPlugin",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Class is now abstract"
            ]
        },        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field COMPILE_PRIORITY",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field TEST_RUNTIME_PRIORITY",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field INSTALL_TASK_NAME",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field TEST_COMPILE_PRIORITY",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field PROVIDED_COMPILE_PRIORITY",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field RUNTIME_PRIORITY",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Field PROVIDED_RUNTIME_PRIORITY",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPlugin",
            "member": "Method org.gradle.api.plugins.MavenPlugin.apply(org.gradle.api.internal.project.ProjectInternal)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Class org.gradle.api.plugins.MavenPluginConvention",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.getConf2ScopeMappings()",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.pom()",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.pom(groovy.lang.Closure)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.pom(org.gradle.api.Action)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.setConf2ScopeMappings(org.gradle.api.artifacts.maven.Conf2ScopeMappingContainer)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.setMavenPomDir(java.io.File)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Method org.gradle.api.plugins.MavenPluginConvention.setMavenPomDir(java.lang.Object)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.MavenPluginConvention",
            "member": "Constructor org.gradle.api.plugins.MavenPluginConvention(org.gradle.api.internal.project.ProjectInternal,org.gradle.api.publication.maven.internal.MavenFactory)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SigningExtension",
            "member": "Method org.gradle.plugins.signing.SigningExtension.signPom(org.gradle.api.artifacts.maven.MavenDeployment,groovy.lang.Closure)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SigningExtension",
            "member": "Method org.gradle.plugins.signing.SigningExtension.signPom(org.gradle.api.artifacts.maven.MavenDeployment)",
            "acceptation": "Legacy 'maven' plugin was removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.distribution.Distribution",
            "member": "Method org.gradle.api.distribution.Distribution.getBaseName()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.distribution.Distribution",
            "member": "Method org.gradle.api.distribution.Distribution.setBaseName(java.lang.String)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.tooling.model.idea.IdeaContentRoot",
            "member": "Method org.gradle.tooling.model.idea.IdeaContentRoot.getGeneratedSourceDirectories()",
            "acceptation": "Deprecated API marked for removal in Gradle 7.0",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.tooling.model.idea.IdeaContentRoot",
            "member": "Method org.gradle.tooling.model.idea.IdeaContentRoot.getGeneratedTestDirectories()",
            "acceptation": "Deprecated API marked for removal in Gradle 7.0",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.invocation.Gradle",
            "member": "Method org.gradle.api.invocation.Gradle.buildStarted(groovy.lang.Closure)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.invocation.Gradle",
            "member": "Method org.gradle.api.invocation.Gradle.buildStarted(org.gradle.api.Action)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.BuildListener",
            "member": "Method org.gradle.BuildListener.buildStarted(org.gradle.api.invocation.Gradle)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.InitScriptApi",
            "member": "Class org.gradle.kotlin.dsl.InitScriptApi",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "org.gradle.kotlin.dsl.support.delegates.GradleDelegate.buildStarted(groovy.lang.Closure)",
                "org.gradle.kotlin.dsl.support.delegates.GradleDelegate.buildStarted(org.gradle.api.Action)"
            ]
        },
        {
            "type": "org.gradle.api.file.UnableToDeleteFileException",
            "member": "Class org.gradle.api.file.UnableToDeleteFileException",
            "acceptation": "Removal of deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.UnableToDeleteFileException",
            "member": "Method org.gradle.api.file.UnableToDeleteFileException.getFile()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.UnableToDeleteFileException",
            "member": "Constructor org.gradle.api.file.UnableToDeleteFileException(java.io.File)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getDistsDir()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getLibsDir()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getProject()",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.setProject(org.gradle.api.internal.project.ProjectInternal)",
            "acceptation": "Removal of deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.getServices()",
            "acceptation": "Moved from now removed AbstractTask, kept for compatibility",
            "changes": []
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.isEnabled()",
            "acceptation": "Moved from now removed AbstractTask, kept for compatibility",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.injectIntoNewInstance(org.gradle.api.internal.project.ProjectInternal,org.gradle.api.internal.project.taskfactory.TaskIdentity,java.util.concurrent.Callable)",
            "acceptation": "Moved from now removed AbstractTask, kept for compatibility",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS"
            ]
        }
    ]
}
